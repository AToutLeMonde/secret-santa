{"version":3,"sources":["firebase.ts","model/repositories/persons.ts","model/repositories/concurrent.ts","model/repositories/reservations.ts","model/data.ts","model/navigation.ts","components/NavigationBar/NavigationBar.tsx","components/HeaderBar/HeaderBar.tsx","pages/HomePage/HomePage.tsx","pages/ParticipantsPage/ParticipantDetails.tsx","pages/ParticipantsPage/ParticipantsPage.tsx","pages/ReservationPage/ReservedPerson.tsx","pages/ReservationPage/ReservationPage.tsx","pages/StatisticsPage/StatisticsPage.tsx","pages/PageContainer.tsx","App.tsx","index.tsx"],"names":["process","firebaseConfig","apiKey","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","firebaseApp","initializeApp","db","getFirestore","COLLECTION_NAME","personsCollection","collection","getPersons","a","getDocs","repo","data","docs","map","doc","name","phone","email","address","preferences","isSystem","id","sort","b","updatePerson","key","myDoc","newFields","updateDoc","MARKER_ID","getConcurrent","getDoc","markerDoc","isBusy","started","updateConcurrent","reservationsCollection","getReservations","personId","isReserved","updateReservation","getPersonsFx","createEffect","getReservationsFx","updatePersonFx","$persons","createStore","on","done","state","payload","result","generate","reservations","mapIds","forEach","r","persons","filter","i","person","Math","floor","random","length","Date","getTime","generateFx","Promise","resolve","reject","timer","setInterval","concurrent","console","log","clearInterval","$reservedPerson","$reservationCounts","watch","$isFetching","pending","effects","useIsFetching","useStore","usePersons","useReservationCounts","homeTabSelected","createEvent","participantsTabSelected","statisticsTabSelected","unknownTabSelected","$currentTab","title","useCurrentTab","tabs","icon","badge","NavigationBar","props","history","useHistory","currentTab","counts","toString","style","position","bottom","width","activeKey","onChange","push","item","Item","HeaderBar","onBack","animationOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","HomePage","count","isFetching","boxSizing","paddingTop","options","height","speed","textAlign","paddingLeft","paddingRight","fontSize","marginBottom","color","onClick","ParticipantDetails","React","useState","setFields","useEffect","onFinish","values","newPerson","callback","Toast","show","content","initialValues","footer","disabled","block","type","label","rules","required","message","placeholder","rows","ParticipantsPage","selected","setSelected","useMemo","p","Panel","padding","overflow","accordion","e","ReservedPerson","size","variant","colors","ReservationPage","reservedPerson","value","setValue","basicColumns","columns","val","extend","Dialog","closeOnAction","actions","text","onAction","action","StatisticsPage","SmileOutline","status","description","updateCurrentTab","location","navigationTab","pathname","split","find","PageContainer","useParams","useLocation","listen","newLocation","children","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3ff828f.chunk.js","sourcesContent":["\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore } from '@firebase/firestore';\n\nconst {\n  REACT_APP_FIREBASE_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_DATABASE_URL,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_APP_ID,\n} = process.env;\n\n\nexport const firebaseConfig = {\n  apiKey: REACT_APP_FIREBASE_API_KEY,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  databaseURL: REACT_APP_DATABASE_URL,\n  projectId: REACT_APP_PROJECT_ID,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_APP_ID\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\nexport const db = getFirestore(firebaseApp)","import { db } from 'src/firebase'\nimport { collection, getDocs, addDoc, updateDoc, doc, deleteDoc } from 'firebase/firestore';\n\nconst COLLECTION_NAME = 'persons'\n\nconst personsCollection = collection(db, COLLECTION_NAME)\n\nexport const getPersons = async (): Promise<Person[]> => {\n  const repo = await getDocs(personsCollection);\n\n  const data = repo.docs.map(doc => {\n    const { name, phone, email, address, preferences, isSystem\n    } = doc.data();\n\n    return {\n      id: doc.id,\n      name,\n      phone,\n      email,\n      address,\n      preferences,\n      isSystem\n    }\n  })\n\n  data.sort((a, b) => {\n    return a.name > b.name ? 1 : -1\n  });\n\n  return data;\n}\n\n// export const addPerson = async (data: Person) => {\n//   await addDoc(personsCollection, data)\n// }\n\nexport const updatePerson = async (data: Person) => {\n  const myDoc = doc(db, COLLECTION_NAME, data.id)\n  const newFields: Record<string, string> = {};\n  for (let key in data) {\n    if (key !== 'id') newFields[key] = data[key];\n  }\n  //console.log('updatePerson', newFields)\n  await updateDoc(myDoc, newFields);\n}\n\n// export const deletePerson = async (id: string) => {\n//   const myDoc = doc(db, COLLECTION_NAME, id)\n//   deleteDoc(myDoc);\n// }\n\nexport interface Person {\n  id?: string,\n  name?: string,\n  phone?: string,\n  email?: string,\n  address?: string,\n  preferences?: string,\n  isSystem?: boolean\n}","import { db } from 'src/firebase'\nimport { collection, getDocs, updateDoc, doc, getDoc } from 'firebase/firestore';\n\nconst COLLECTION_NAME = 'concurrent'\nconst MARKER_ID = 'j7PH4DHpsSVYoHsDOyP4'\n\n//const concurrentCollection = collection(db, COLLECTION_NAME)\n\nexport const getConcurrent = async (): Promise<Concurrent> => {\n\n  const myDoc = doc(db, COLLECTION_NAME, MARKER_ID)\n  const markerDoc = await getDoc(myDoc)\n\n\n  const { isBusy, started } = markerDoc.data();\n\n  return {\n    id: markerDoc.id,\n    isBusy,\n    started\n  }\n\n}\n\n\nexport const updateConcurrent = async (isBusy: boolean, started: number) => {\n  const myDoc = doc(db, COLLECTION_NAME, MARKER_ID)\n\n  await updateDoc(myDoc, { isBusy, started });\n}\n\n\nexport interface Concurrent {\n  id?: string,\n  isBusy?: boolean,\n  started: number\n}","import { db } from 'src/firebase'\nimport { collection, getDocs, addDoc, updateDoc, doc, deleteDoc } from 'firebase/firestore';\n\nconst COLLECTION_NAME = 'reservations'\n\nconst reservationsCollection = collection(db, COLLECTION_NAME)\n\nexport const getReservations = async (): Promise<Reservation[]> => {\n  const repo = await getDocs(reservationsCollection);\n\n  return repo.docs.map(doc => {\n    const { personId, isReserved\n    } = doc.data();\n\n    return {\n      id: doc.id,\n      personId,\n      isReserved\n    }\n  })\n}\n\nexport const clearAllReservations = async () => {\n  const reservations = await getReservations();\n  for (let index = 0; index < reservations.length; index++) {\n    const reservation = reservations[index];\n    updateReservation({ ...reservation, isReserved: false });\n  }\n}\n\nexport const updateReservation = async (data: Reservation) => {\n  const myDoc = doc(db, COLLECTION_NAME, data.id)\n  const newFields: Record<string, string> = {};\n  for (let key in data) {\n    if (key !== 'id') newFields[key] = data[key];\n  }\n  await updateDoc(myDoc, newFields);\n}\n\n\nexport interface Reservation {\n  id?: string,\n  personId: string,\n  isReserved?: boolean\n}","import { combine, createEffect, createEvent, createStore, guard, sample } from 'effector';\nimport { useStore } from 'effector-react';\nimport { getConcurrent, getPersons, getReservations, Person, Reservation, updateConcurrent, updatePerson, updateReservation } from './repositories';\n\nimport { pending } from 'patronum/pending';\n\nexport const getPersonsFx = createEffect<void, Person[]>(async () => {\n  return await getPersons();\n})\n\nexport const getReservationsFx = createEffect<void, Reservation[]>(async () => {\n  return await getReservations();\n})\n\n\nexport const updatePersonFx = createEffect<Person, void>(async (data: Person) => {\n  return await updatePerson(data);\n})\n\nconst $persons = createStore<Person[]>([])\n  .on(getPersonsFx.done, (state, payload) => {\n    return payload.result;\n  })\n\nconst generate = async (name: string) => {\n\n  const data = await getPersonsFx();\n  const reservations = await getReservationsFx();\n\n  const mapIds: any = {}\n\n  reservations.forEach(r => {\n    mapIds[r.personId] = r\n  })\n\n  const persons = data.filter(i => i.name !== name\n    && !mapIds[i.id].isReserved);\n\n  //console.log('persons', persons)\n\n  const person = persons[Math.floor(Math.random() * persons.length)];\n  //console.log(person)\n\n  if (person) {\n    await updateReservation({\n      id: mapIds[person.id].id,\n      personId: person.id,\n      isReserved: true\n    })\n  }\n\n  await updateConcurrent(\n    false,\n    new Date().getTime()\n  )\n\n  getReservationsFx();\n\n  //console.log('person', person)\n\n  return person;\n}\n\nexport const generateFx = createEffect<string, Person>(async (name) => {\n\n  return new Promise(function (resolve, reject) {\n    const timer = setInterval(async () => {\n      const concurrent = await getConcurrent();\n      console.log(concurrent)\n\n      if (!concurrent.isBusy) {\n        clearInterval(timer);\n        await updateConcurrent(\n          true,\n          new Date().getTime()\n        )\n\n        resolve(generate(name))\n      }\n    }, 500)\n  })\n\n\n\n})\n\nconst $reservedPerson = createStore<Person>(null)\n  .on(generateFx.done, (state, payload) => {\n    return payload.result;\n  });\n\nconst $reservationCounts = createStore<number>(0)\n  .on(getReservationsFx.done, (state, payload) => {\n\n    return payload.result.filter(i => i.isReserved).length;\n  });\n\nupdatePersonFx.done.watch(() => {\n  getPersonsFx()\n})\n\n\nconst $isFetching = pending({\n  effects: [\n    getPersonsFx,\n    updatePersonFx,\n    generateFx\n  ]\n});\n\nexport const useIsFetching = () => useStore($isFetching)\n\nexport const usePersons = () => useStore($persons);\n\nexport const useReservedPerson = () => useStore($reservedPerson)\n\nexport const useReservationCounts = () => useStore($reservationCounts)\n\n","import { combine, createEffect, createEvent, createStore, guard, sample } from 'effector';\nimport { useStore } from 'effector-react';\nimport { getPersonsFx, getReservationsFx } from './data';\n\nexport interface ICurrentTab {\n  key: string,\n  title: string\n}\n\nexport const homeTabSelected = createEvent()\nexport const participantsTabSelected = createEvent()\nexport const statisticsTabSelected = createEvent()\nexport const unknownTabSelected = createEvent()\n\nconst $currentTab = createStore<ICurrentTab>({\n  key: 'home',\n  title: ''\n})\n  .on(homeTabSelected, ((state, payload) => {\n    return {\n      key: 'home',\n      title: state.title\n    }\n  }))\n  .on(participantsTabSelected, ((state, payload) => {\n\n    return {\n      key: 'participants',\n      title: 'Edit participants info'\n    }\n  }))\n  .on(statisticsTabSelected, ((state, payload) => {\n    return {\n      key: 'statistics',\n      title: 'Statistics'\n    }\n  }))\n  .on(unknownTabSelected, ((state, payload) => {\n    return {\n      key: '',\n      title: 'Select your name'\n    }\n  }))\n\nhomeTabSelected.watch(() => {\n  getPersonsFx();\n  getReservationsFx();\n})\n\nparticipantsTabSelected.watch(() => {\n  getPersonsFx();\n  getReservationsFx();\n})\n\nstatisticsTabSelected.watch(() => {\n  getPersonsFx();\n  getReservationsFx();\n})\n\nunknownTabSelected.watch(() => {\n  getPersonsFx();\n})\n\n\nexport const useCurrentTab = () => useStore($currentTab)","import React from 'react';\n\nimport { FaHome } from 'react-icons/fa';\nimport { GoGraph } from 'react-icons/go';\nimport { RiTeamFill } from 'react-icons/ri';\n\n//\n\nimport { Badge, TabBar } from 'antd-mobile'\n\n\nimport { useCurrentTab, usePersons, useReservationCounts } from 'src/model';\nimport { useHistory } from 'react-router-dom';\n\nconst tabs = [\n  {\n    key: 'home',\n    title: 'Home',\n    icon: <FaHome />,\n\n  },\n  {\n    key: 'participants',\n    title: 'Participants',\n    icon: <RiTeamFill />,\n\n  },\n  {\n    key: 'statistics',\n    title: 'Statistics',\n    icon: <GoGraph />,\n    badge: '',\n  }\n]\n\n// < HistogramOutline />\n\n\nexport const NavigationBar = (props: any) => {\n\n  const history = useHistory()\n  const currentTab = useCurrentTab();\n  const counts = useReservationCounts();\n\n  if (counts > 0) {\n    tabs[2].badge = counts.toString();\n  }\n\n  const handleChange = (key: string) => {\n    history.push(`/${key === 'home' ? '' : key}`)\n  }\n\n  return (\n\n    <div style={{\n      position: 'absolute',\n      bottom: 0,\n      width: '100%'\n    }}>\n      <TabBar activeKey={currentTab.key} onChange={handleChange}>\n        {tabs.map(item => (\n          <TabBar.Item\n            key={item.key}\n            icon={item.icon}\n            title={item.title}\n            badge={item.badge}\n          />\n        ))}\n      </TabBar>\n    </div>\n\n\n  )\n}","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { NavBar, Space, Toast } from 'antd-mobile'\nimport { useCurrentTab } from 'src/model';\n\nexport const HeaderBar = (props: any) => {\n  const history = useHistory()\n\n  const currentTab = useCurrentTab();\n\n  const onBack = () => {\n    history.push(\"/\")\n  }\n\n  return (\n    <NavBar onBack={onBack}>{currentTab.title}</NavBar>\n  )\n}","import React from 'react';\n\n\nimport { Button, Loading, Space } from 'antd-mobile'\nimport { getPersons, updatePerson, getConcurrent } from 'src/model/repositories';\n\nimport Lottie from \"react-lottie\";\n\nimport hero from 'src/assets/animations/secretSanta.json'\nimport { useHistory } from 'react-router-dom';\nimport { useIsFetching, usePersons, useReservationCounts } from 'src/model';\n\nconst animationOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: hero,\n  rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\",\n  },\n\n}\n\n\n\nexport const HomePage = (props: any) => {\n  const history = useHistory()\n\n  const persons = usePersons();\n  const count = useReservationCounts();\n\n  const isFetching = useIsFetching();\n\n  return (\n    <>\n\n      <div style={{ boxSizing: 'border-box', paddingTop: 0 }}>\n        <Lottie options={animationOptions} height={120} width={120} speed={1.5} />\n      </div>\n      <div style={{ textAlign: 'center', paddingLeft: 20, paddingRight: 20, fontSize: '110%' }}>\n        <h2>Hi, friend!</h2>\n        <p>Please&nbsp;click the&nbsp;red&nbsp;button below and follow the&nbsp;instructions.</p>\n        <p>\n          You&nbsp;will be&nbsp;given a&nbsp;randomly selected&nbsp;name of&nbsp;the&nbsp;secret\n          santa app participant to&nbsp;whom you should&nbsp;send&nbsp;a&nbsp;New&nbsp;Year&nbsp;gift.</p>\n\n        <p><b>Remember carefully the provided name</b> and&nbsp;don't tell&nbsp;it&nbsp;anyone.</p>\n\n        <p style={{ marginBottom: 40, color: '#999' }}>\n          You can also go to Participants tab and specify your preferences what would <b>you</b> like to receive as a gift.\n\n        </p>\n\n        {persons.length > 1 && count < persons.length && (\n          <Button color='danger' onClick={() => history.push('/reservation')}>Generate gift recipient</Button>\n        )\n        }\n\n        {isFetching && <Loading color='primary' />}\n\n\n\n      </div>\n\n    </>\n  )\n}","import {\n  Form,\n  Input,\n  Button,\n  Dialog,\n  TextArea,\n  Toast\n} from 'antd-mobile'\n\nimport React from 'react';\nimport { updatePersonFx, useIsFetching } from 'src/model';\nimport { Person, updatePerson } from 'src/model/repositories';\n\n\n\n\n\nexport const ParticipantDetails = (props: any) => {\n\n  const { email, phone, address, preferences } = props.person;\n\n  const [fields, setFields] = React.useState({\n    email: '',\n    phone: '',\n    address: '',\n    preferences: ''\n  })\n\n  React.useEffect(() => {\n    setFields({ ...props.person })\n  }, [props.person])\n\n  const handleChange = (name: string, value: string) => {\n    setFields({\n      ...fields,\n      [name]: value\n    })\n  }\n\n\n  const isFetching = useIsFetching();\n\n\n  const onFinish = async (values: any) => {\n    const newPerson = {\n      ...props.person,\n      ...values,\n      preferences: values.preferences || ''\n    }\n\n    //console.log('newPerson', newPerson)\n\n    await updatePersonFx(newPerson);\n\n    if (props.callback) {\n      props.callback();\n    }\n\n    Toast.show({\n      content: 'Updated',\n    })\n\n\n  }\n\n  return (\n\n    <>\n\n      <Form\n        onFinish={onFinish}\n        initialValues={{\n          email,\n          phone,\n          address,\n          preferences\n        }\n        }\n        footer={\n          <Button\n            disabled={isFetching}\n            block type='submit' color='primary'>\n            Save\n          </Button>\n        }\n      >\n        <Form.Item\n          name='email'\n          label='Email'\n          rules={[{ required: true, message: 'Please provide a value' }]}\n        >\n          <Input placeholder='Email'\n          />\n        </Form.Item>\n\n        <Form.Item\n          name='phone'\n          label='Mobile phone (started with +)'\n          rules={[{ required: true, message: 'Please provide a value' }]}\n        >\n          <Input placeholder='+1 123 123 12 34' />\n        </Form.Item>\n\n        <Form.Item\n          name='address'\n          label='Delivery postal address'\n          rules={[{ required: true, message: 'Please provide a value' }]}\n        >\n          <TextArea rows={7} placeholder='SDEK or home address' />\n        </Form.Item>\n\n        <Form.Item\n          name='preferences'\n          label='My gift preferences'\n\n        >\n          <TextArea rows={4} placeholder='I whish...' />\n        </Form.Item>\n\n      </Form>\n    </>\n  )\n}","import React from 'react';\nimport { HeaderBar } from 'src/components';\nimport { useIsFetching, usePersons } from 'src/model';\n\nimport { Collapse, Loading } from 'antd-mobile'\nimport { ParticipantDetails } from './ParticipantDetails';\n\n\nexport const ParticipantsPage = (props: any) => {\n\n  const isFetching = useIsFetching();\n  const data = usePersons();\n  const [selected, setSelected] = React.useState<string>('')\n\n\n  const persons = React.useMemo(() => {\n\n    return data.filter(i => !i.isSystem)\n      .map(p => {\n        return (\n          <Collapse.Panel key={p.id} title={p.name}>\n            <ParticipantDetails person={p} callback={() => setSelected('')} />\n          </Collapse.Panel>\n        )\n      })\n  }, [data])\n\n  if (isFetching) {\n    return <Loading color='primary' />\n  }\n\n\n  return (\n    <>\n      <HeaderBar />\n\n\n      <div style={{ padding: 15, height: 'calc(100vh - 120px)', overflow: 'scroll' }}>\n        <Collapse\n          accordion={true}\n          activeKey={selected} onChange={(e) => {\n            setSelected(e)\n          }}>\n          {persons}\n        </Collapse>\n      </div>\n\n\n\n\n    </>\n  )\n}","\n\nimport { Card } from 'antd-mobile';\nimport Avatar from 'boring-avatars';\nimport React from 'react';\nimport { Person } from 'src/model/repositories';\n\n\nexport const ReservedPerson = (props: any) => {\n  const person = props.person as Person;\n\n  return (\n    <Card title={'Your gift recipient is'} style={{ textAlign: 'center' }}>\n      <Avatar\n        size={120}\n        name={person.id}\n        variant=\"beam\"\n        colors={[\n          '#a3a948',\n          '#edb92e',\n          '#f85931',\n          '#ce1836',\n          '#009989'\n        ]}\n      />\n      <h1>{person.name}</h1>\n      <p style={{ color: '#999', fontSize: '120%' }}>It would be&nbsp;a&nbsp;greate idea to&nbsp;take a&nbsp;screenshot of&nbsp;this&nbsp;page so&nbsp;as&nbsp;not&nbsp;to&nbsp;forget your&nbsp;gift recipient&nbsp;name.</p>\n      <p style={{ color: '#999' }}>Chekout participants tab to find out more information about the person.</p>\n      <h3>Have fun!</h3>\n    </Card>\n\n  )\n}","import { Button, Card, Dialog, Form, Loading, Picker, PickerView } from 'antd-mobile';\nimport React from 'react';\nimport { HeaderBar } from 'src/components';\nimport { generateFx, useIsFetching, usePersons, useReservedPerson } from 'src/model';\nimport { ReservedPerson } from './ReservedPerson';\n\nexport const ReservationPage = (props: any) => {\n  const isFetching = useIsFetching();\n  const data = usePersons();\n\n  const reservedPerson = useReservedPerson();\n\n\n  const [value, setValue] = React.useState(['']);\n\n  if (isFetching) {\n    return <Loading color='primary' />\n  }\n\n  const basicColumns = [data.filter(i => !i.isSystem)\n    .map(i => i.name)]\n\n  const handleSelect = () => {\n    Dialog.show({\n      content: `Do you confirm that your name is ${value[0]} and you agree to generate your gift recipient name? This action cannot be undone.`,\n      closeOnAction: true,\n      actions: [\n        {\n          key: 'yes',\n          text: 'Yes',\n        },\n        {\n          key: 'cancel',\n          text: 'Cancel',\n        },\n      ],\n      onAction: (action) => {\n\n        if (action.key === 'yes') {\n          generateFx(value[0]);\n        }\n      }\n    })\n  }\n\n  if (reservedPerson) {\n    return (\n      <ReservedPerson person={reservedPerson} />\n    )\n  }\n\n  return (\n    <>\n      <HeaderBar />\n      <div style={{ padding: 15, height: 'calc(100vh - 120px)', overflow: 'scroll' }}>\n        <p style={{ textAlign: 'center', fontSize: '120%' }}>\n          Select <b>your name</b> so that the system excludes you from this random generation session.\n        </p>\n        <p style={{ textAlign: 'center' }}>\n          This is necessary in order not to&nbsp;give a&nbsp;gift to&nbsp; yourself&nbsp;:)\n        </p>\n\n        <PickerView\n          style={{ marginBottom: 15 }}\n          columns={basicColumns}\n          value={value}\n          onChange={(val, extend) => {\n            setValue(val)\n\n          }}\n        />\n\n        <Button\n          block\n          color='primary'\n          onClick={handleSelect}\n        >\n          Go!\n        </Button>\n\n      </div>\n\n    </>\n  )\n}\n\n\n\n","import { Grid, Result, Tag } from 'antd-mobile';\nimport { SmileOutline } from 'antd-mobile-icons';\nimport React from 'react';\nimport { HeaderBar } from 'src/components';\nimport { usePersons, useReservationCounts } from 'src/model';\n\nexport const StatisticsPage = (props: any) => {\n\n  const persons = usePersons();\n  const count = useReservationCounts();\n\n  return (\n    <>\n      <HeaderBar />\n      <div style={{ padding: 15, height: 'calc(100vh - 120px)', overflow: 'scroll' }}>\n\n        {persons.length > 0 && count === persons.length && (\n          <Result\n            icon={<SmileOutline />}\n            status='success'\n            title='Hapy New Year!'\n            description='All have successfully chose their gift recipients'\n          />\n\n        )}\n        {persons.length > 0 && count !== persons.length && (\n          <>\n            <p style={{ textAlign: 'left', fontSize: '120%' }}>\n              <Tag color='success'>{count}</Tag> participants have already chosen their gift recipient person.\n            </p>\n\n            <p style={{ textAlign: 'left', fontSize: '120%' }}>\n              <Tag color='warning'>{persons.length - count}</Tag> participants left.\n            </p>\n          </>\n        )}\n\n\n\n      </div>\n\n    </>\n  )\n}","import React from 'react';\nimport { HashRouter as Router, Route, Switch, useHistory, useLocation, useParams } from 'react-router-dom';\nimport { homeTabSelected, participantsTabSelected, statisticsTabSelected, unknownTabSelected, useCurrentTab } from 'src/model';\n\n\nconst updateCurrentTab = (location: any) => {\n\n  let navigationTab = (location.pathname || '').split('/').find(i => i) || '';\n  if (navigationTab === '') navigationTab = 'home';\n\n  //console.log('navigationTab', navigationTab)\n\n  if (navigationTab === 'home') {\n    homeTabSelected();\n  } else if (navigationTab === 'participants') {\n    participantsTabSelected();\n  } else if (navigationTab === 'statistics') {\n    statisticsTabSelected();\n  } else {\n    //console.log('ww')\n    unknownTabSelected();\n  }\n\n}\n\nexport const PageContainer = (props: any) => {\n  const routeParams = useParams<any>();\n  const location = useLocation();\n  const history = useHistory()\n\n\n  React.useEffect(() => {\n    updateCurrentTab(location);\n    return history.listen((newLocation) => {\n      updateCurrentTab(newLocation);\n    })\n  }, [history])\n\n  return (\n    <>\n      {props.children}\n    </>\n  )\n}\n\n\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch, useHistory, useLocation, useParams } from 'react-router-dom';\nimport { NavigationBar } from './components';\nimport { useIsFetching } from './model';\n\nimport { BlankPage, HomePage, ParticipantsPage, ReservationPage, StatisticsPage } from './pages';\nimport { PageContainer } from './pages/PageContainer';\n\n\nfunction App() {\n\n\n\n\n  return (\n\n    <div style={{\n      width: '100%',\n\n    }}>\n\n      <PageContainer>\n        <Route path=\"/\" exact={true} >\n          <HomePage />\n        </Route>\n\n        <Route path=\"/participants\" exact={true} >\n          <ParticipantsPage />\n        </Route>\n\n        <Route path=\"/statistics\" exact={true} >\n          <StatisticsPage />\n        </Route>\n\n        <Route path=\"/reservation\" exact={true} >\n          <ReservationPage />\n        </Route>\n\n        <NavigationBar />\n\n      </PageContainer>\n\n    </div>\n  );\n}\n\nexport default App;\n","import './assets/styles/App.less';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport { getPersonsFx, getReservationsFx } from './model';\nimport { clearAllReservations } from './model/repositories';\n\n//clearAllReservations();\ngetPersonsFx();\ngetReservationsFx();\n\nReactDOM.render(\n\n  <Router>\n    <App />\n  </Router>\n\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}